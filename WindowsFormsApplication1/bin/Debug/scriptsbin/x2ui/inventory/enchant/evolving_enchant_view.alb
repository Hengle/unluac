local EVOLVING_MAX_ATTR = 5
function SetViewOfEvolvingEnchantWindow(tabWindow)
  local CreateTabSubMenu = function(id, parent, menuTexts, maxCount)
    local widget = UIParent:CreateWidget("emptywidget", id, parent)
    local bg = CreateContentBackground(widget, "TYPE2")
    bg:AddAnchor("TOPLEFT", widget, 0, 0)
    bg:AddAnchor("BOTTOMRIGHT", widget, 0, 0)
    ApplyTextureColor(bg, TEXTURE_COLOR.BOX_BROWN)
    widget.subMenuButtons = {}
    local widthSum = 15
    for i = 1, maxCount do
      local text = ""
      if menuTexts[i] ~= nil then
        text = menuTexts[i]
      end
      local subMenuButton = widget:CreateChildWidget("button", "subMenuButtons", i, true)
      ApplyButtonSkin(subMenuButton, BUTTON_CONTENTS.INGAMESHOP_SUB_MENU_UNSELECTED)
      subMenuButton:SetText(text)
      subMenuButton:SetHeight(20)
      subMenuButton:AddAnchor("LEFT", widget, widthSum, 0)
      subMenuButton.style:SetFontSize(FONT_SIZE.LARGE)
      subMenuButton:SetAutoResize(true)
      widthSum = widthSum + subMenuButton:GetWidth()
      if i ~= maxCount then
        local seperateLabel = subMenuButton:CreateChildWidget("label", "seperateLabel", 0, true)
        local c = GetIngameShopSelectedSubMenuButtonFontColor().normal
        ApplyTextColor(seperateLabel, c)
        seperateLabel:AddAnchor("TOPLEFT", subMenuButton, "TOPRIGHT", 5, 0)
        seperateLabel:AddAnchor("BOTTOMLEFT", subMenuButton, "BOTTOMRIGHT", 0, 0)
        seperateLabel:SetText("|")
        seperateLabel.style:SetFontSize(FONT_SIZE.LARGE)
        seperateLabel:SetAutoResize(true)
        widthSum = widthSum + seperateLabel:GetWidth() + 10
      end
      widget.subMenuButtons[i] = subMenuButton
    end
    function widget:Select(index)
      for j = 1, #self.subMenuButtons do
        SetButtonFontColor(self.subMenuButtons[j], BUTTON_CONTENTS.INGAMESHOP_SUB_MENU_UNSELECTED.fontColor)
      end
      SetButtonFontColor(self.subMenuButtons[index], BUTTON_CONTENTS.INGAMESHOP_SUB_MENU_SELECTED.fontColor)
    end
    widget.selIndex = 0
    for i = 1, #widget.subMenuButtons do
      do
        local button = widget.subMenuButtons[i]
        function button:OnClick()
          widget:Select(i)
          widget.selIndex = i
          if widget.OnClickProc ~= nil then
            widget:OnClickProc(i)
          end
        end
        button:SetHandler("OnClick", button.OnClick)
      end
    end
    return widget
  end
  local anchor, height
  local commonWidth = tabWindow:GetWidth()
  height = WINDOW_ENCHANT.EVOLVING_ENCHANT_TAB.SUB_MENU.HEIGHT
  anchor = WINDOW_ENCHANT.EVOLVING_ENCHANT_TAB.SUB_MENU.ANCHOR
  local subMenuTexts = WINDOW_ENCHANT.EVOLVING_ENCHANT_TAB.SUB_MENU.TEXTS
  local tabSubMenu = CreateTabSubMenu("tabSubMenu", tabWindow, subMenuTexts, #subMenuTexts)
  tabSubMenu:AddAnchor("TOPLEFT", tabWindow, anchor[1], anchor[2])
  tabSubMenu:SetExtent(commonWidth, height)
  tabWindow.tabSubMenu = tabSubMenu
  local anchor = WINDOW_ENCHANT.EVOLVING_ENCHANT_TAB.GUIDE_ICON_ANCHOR
  local guide = CreateGuideIconWidget(tabWindow)
  guide:AddAnchor("TOPRIGHT", tabWindow, anchor[1], anchor[2])
  tabWindow.guide = guide
  local decoY = 10
  local featureSet = X2Player:GetFeatureSet()
  if not featureSet.itemEvolvingReRoll then
    decoY = decoY - 20
    tabSubMenu:Show(false)
  end
  local deco = tabWindow:CreateImageDrawable(TEXTURE_PATH.COSPLAY_ENCHANT, "background")
  deco:SetTextureInfo("soket_green_line")
  deco:AddAnchor("TOP", tabSubMenu, "BOTTOM", -22, decoY)
  tabWindow.evolvingDeco = deco
  local reRollDeco = tabWindow:CreateImageDrawable(TEXTURE_PATH.COMMON_ENCHANT, "background")
  reRollDeco:SetTextureInfo("effect")
  reRollDeco:AddAnchor("TOP", tabSubMenu, "BOTTOM", 0, 10)
  if not featureSet.itemEvolvingReRoll then
    reRollDeco:SetVisible(false)
  end
  tabWindow.RerollDeco = reRollDeco
  local slotTargetItem = CreateTargetSlot(tabWindow, GetUIText(COMMON_TEXT, "growth_item"))
  slotTargetItem:AddAnchor("RIGHT", deco, "LEFT", 26, 10)
  function slotTargetItem:ApplyAlpha(value)
    self:SetAlpha(value)
    self.bg:SetColor(1, 1, 1, value)
  end
  local materialBg = tabWindow:CreateImageDrawable(TEXTURE_PATH.COSPLAY_ENCHANT, "background")
  materialBg:SetTextureInfo("soket_green")
  materialBg:AddAnchor("LEFT", deco, "RIGHT", -78, 7)
  local slotFirstMaterialItem = CreateItemIconButton("slotFirstMaterialItem", tabWindow)
  slotFirstMaterialItem:SetExtent(ICON_SIZE.SLAVE, ICON_SIZE.SLAVE)
  slotFirstMaterialItem:AddAnchor("CENTER", materialBg, -20, -7)
  slotFirstMaterialItem.back:SetVisible(false)
  tabWindow.slotFirstMaterialItem = slotFirstMaterialItem
  slotFirstMaterialItem.bg = materialBg
  local bg = tabWindow:CreateImageDrawable(TEXTURE_PATH.COMMON_ENCHANT, "background")
  bg:SetTextureInfo("socket_purple")
  bg:AddAnchor("CENTER", slotFirstMaterialItem, -8, -5)
  slotFirstMaterialItem.reRollBg = bg
  local slotSecondMaterialItem = CreateItemIconButton("slotSecondMaterialItem", tabWindow)
  slotSecondMaterialItem:SetExtent(ICON_SIZE.SLAVE, ICON_SIZE.SLAVE)
  slotSecondMaterialItem:AddAnchor("LEFT", slotFirstMaterialItem, "RIGHT", 8, 0)
  slotSecondMaterialItem.back:SetVisible(false)
  tabWindow.slotSecondMaterialItem = slotSecondMaterialItem
  local label = CreateEnchantSlotLabel(slotFirstMaterialItem, GetUIText(COMMON_TEXT, "material_item"))
  ApplyTextColor(label, FONT_COLOR.PURPLE)
  local label = CreateEnchantSlotLabel(slotSecondMaterialItem, GetUIText(COMMON_TEXT, "material_item"))
  label:RemoveAllAnchors()
  label:AddAnchor("TOP", materialBg, "BOTTOM", 9, -13)
  ApplyTextColor(label, {
    ConvertColor(94),
    ConvertColor(143),
    ConvertColor(98),
    1
  })
  function slotFirstMaterialItem:ApplyAlpha(value)
    self:SetAlpha(value)
    self.bg:SetColor(1, 1, 1, value)
    self.reRollBg:SetColor(1, 1, 1, value)
    slotSecondMaterialItem:SetAlpha(value)
  end
  local bg = CreateContentBackground(tabWindow, "TYPE10")
  bg:SetExtent(tabWindow:GetWidth(), 270)
  bg:AddAnchor("TOP", tabWindow, 0, 180)
  local commonWidth = bg:GetWidth() - MARGIN.WINDOW_SIDE - 10
  local name = tabWindow:CreateChildWidget("textbox", "name", 0, true)
  name:SetExtent(commonWidth, FONT_SIZE.LARGE)
  name:AddAnchor("TOP", bg, 0, MARGIN.WINDOW_SIDE / 1.5)
  name.style:SetFontSize(FONT_SIZE.LARGE)
  local expLabel = tabWindow:CreateChildWidget("label", "expLabel", 0, false)
  expLabel:SetExtent(commonWidth, FONT_SIZE.LARGE)
  expLabel:AddAnchor("TOPLEFT", name, "BOTTOMLEFT", 0, MARGIN.WINDOW_SIDE / 2)
  expLabel.style:SetFontSize(FONT_SIZE.LARGE)
  expLabel:SetText(GetUIText(COMMON_TEXT, "exp"))
  ApplyTextColor(expLabel, FONT_COLOR.MIDDLE_TITLE)
  expLabel.style:SetAlign(ALIGN_LEFT)
  local materialExpGuage = CreateStatusBar("materialExpGuage", tabWindow, "item_evolving_material")
  materialExpGuage:SetWidth(commonWidth)
  materialExpGuage:AddAnchor("TOPLEFT", expLabel, "BOTTOMLEFT", 0, 5)
  tabWindow.materialExpGuage = materialExpGuage
  local targetCurExpGuage = CreateStatusBar("targetCurExpGuage", tabWindow, "item_evolving_target")
  targetCurExpGuage:SetWidth(commonWidth)
  targetCurExpGuage:AddAnchor("TOPLEFT", materialExpGuage, 0, 0)
  tabWindow.targetCurExpGuage = targetCurExpGuage
  local nextExpGuage = CreateStatusBar("nextExpGuage", tabWindow, "item_evolving_target")
  nextExpGuage:SetWidth(commonWidth)
  nextExpGuage:AddAnchor("TOPLEFT", materialExpGuage, 0, 0)
  tabWindow.nextExpGuage = nextExpGuage
  local expValue = tabWindow:CreateChildWidget("label", "expValue", 0, true)
  expValue:SetAutoResize(true)
  expValue:AddAnchor("BOTTOMRIGHT", expLabel, 0, -6)
  expValue.style:SetAlign(ALIGN_RIGHT)
  ApplyTextColor(expValue, FONT_COLOR.BLUE)
  local effectLabel = tabWindow:CreateChildWidget("label", "effectLabel", 0, false)
  effectLabel:SetExtent(commonWidth, FONT_SIZE.LARGE)
  effectLabel.style:SetFontSize(FONT_SIZE.LARGE)
  effectLabel:SetText(GetUIText(COMMON_TEXT, "effect"))
  ApplyTextColor(effectLabel, FONT_COLOR.MIDDLE_TITLE)
  effectLabel:AddAnchor("TOPLEFT", materialExpGuage, "BOTTOMLEFT", 0, MARGIN.WINDOW_SIDE)
  effectLabel.style:SetAlign(ALIGN_LEFT)
  local listButton = tabWindow:CreateChildWidget("button", "listButton", 0, true)
  listButton:Enable(false)
  listButton:AddAnchor("BOTTOMRIGHT", effectLabel, 0, 0)
  ApplyButtonSkin(listButton, BUTTON_CONTENTS.SEARCH)
  local line = CreateLine(effectLabel, "TYPE1")
  line:AddAnchor("TOPLEFT", effectLabel, "BOTTOMLEFT", -MARGIN.WINDOW_SIDE / 2, 5)
  line:AddAnchor("TOPRIGHT", effectLabel, "BOTTOMRIGHT", MARGIN.WINDOW_SIDE / 2, 5)
  local listCtrl = CreateListCtrl("listCtrl", tabWindow)
  listCtrl:SetExtent(commonWidth, 145)
  listCtrl:AddAnchor("TOPLEFT", effectLabel, "BOTTOMLEFT", 0, MARGIN.WINDOW_SIDE / 2.5)
  local valueColWidth = 65
  local nameColWidth = commonWidth - valueColWidth * 2
  local LayoutFuncNameCol = function(widget, rowIndex, colIndex, subItem)
    local name = subItem:CreateChildWidget("label", "name", 0, true)
    name:SetExtent(subItem:GetWidth() - MARGIN.WINDOW_SIDE, subItem:GetHeight())
    name:AddAnchor("LEFT", subItem, MARGIN.WINDOW_SIDE, 0)
    name.style:SetAlign(ALIGN_LEFT)
    name.style:SetEllipsis(true)
    ApplyTextColor(name, FONT_COLOR.DEFAULT)
    local dingbat = DrawRoundDingbat(name)
    dingbat:RemoveAllAnchors()
    dingbat:AddAnchor("RIGHT", name, "LEFT", -5, 0)
  end
  local DataSetFuncNameCol = function(subItem, data, setValue)
    if setValue then
      subItem.name:Show(true)
      local valueStr = ""
      if data.value == nil then
        valueStr = GetUIText(COMMON_TEXT, "maintain_current_attr")
      else
        valueStr = locale.attribute(data.value)
      end
      subItem.name:SetText(valueStr)
      subItem.name.dingbat:SetVisible(not data.enableLevelup)
    else
      subItem.name:Show(false)
    end
  end
  local DataSetFuncDiffValueCol = function(subItem, data, setValue)
    if setValue then
      local color = FONT_COLOR.DEFAULT
      local valueStr = GetModifierCalcValue(data.name, data.value)
      if data.isDiff then
        color = FONT_COLOR.GREEN
        valueStr = string.format("+%s", valueStr)
      end
      subItem:Show(true)
      subItem:SetText(valueStr)
      ApplyTextColor(subItem, color)
    else
      subItem:Show(false)
    end
  end
  local LayoutFuncValue = function(widget, rowIndex, colIndex, subItem)
    subItem.style:SetAlign(ALIGN_RIGHT)
    ApplyTextColor(subItem, FONT_COLOR.DEFAULT)
  end
  listCtrl:InsertColumn("", nameColWidth, LCCIT_WINDOW, LayoutFuncNameCol, DataSetFuncNameCol)
  listCtrl:InsertColumn("", valueColWidth, LCCIT_STRING, LayoutFuncValue, nil)
  listCtrl:InsertColumn("", valueColWidth, LCCIT_STRING, LayoutFuncValue, DataSetFuncDiffValueCol)
  listCtrl:DisableColumButton()
  listCtrl:InsertRows(EVOLVING_MAX_ATTR + 1, false)
  for i = 1, listCtrl:GetRowCount() do
    ListCtrlItemGuideLine(listCtrl:GetListCtrlItems(), listCtrl:GetRowCount())
  end
  local firstOffset = {}
  firstOffset.x = 1
  firstOffset.y = 4
  local radioButtons = CreateRadioButton("radioButton", listCtrl, EVOLVING_MAX_ATTR + 1, "vertical", firstOffset, 9)
  radioButtons:Show(false)
  listCtrl.radioButtons = radioButtons
  local attrInfoStr = tabWindow:CreateChildWidget("textbox", "attrInfoStr", 0, true)
  attrInfoStr:SetExtent(commonWidth, FONT_SIZE.MIDDLE)
  attrInfoStr:AddAnchor("TOP", listCtrl, "BOTTOM", 0, MARGIN.WINDOW_SIDE)
  attrInfoStr.style:SetFontSize(FONT_SIZE.LARGE)
  attrInfoStr:SetLineSpace(TEXTBOX_LINE_SPACE.MIDDLE)
  ApplyTextColor(attrInfoStr, FONT_COLOR.BLUE)
  local tip = tabWindow:CreateChildWidget("textbox", "tip", 0, true)
  tip:SetExtent(commonWidth, FONT_SIZE.MIDDLE)
  tip:SetLineSpace(TEXTBOX_LINE_SPACE.MIDDLE)
  ApplyTextColor(tip, FONT_COLOR.GRAY)
end
